import protoProxy from "./rc_renderer_proxy";

class RCImpl {
    init(args = []) {

    }

    checkPermission() {
        return protoProxy.invoke('checkPermission');
    }

    screenSize() {
        return protoProxy.invoke('screenSize');
    }

    start() {
        protoProxy.invoke('start');
    }

    stop() {
        protoProxy.invoke('stop');
    }

    isUac() {
        protoProxy.invoke('isUac');
    }

    isStarted() {
        return protoProxy.invoke('isStarted');
    }

    onTextInput(text) {
        protoProxy.invoke('onTextInput', text);
    }

    onKeyDown(key) {
        protoProxy.invoke('onKeyEvent', key, 0);
    }

    onKeyUp(key) {
        protoProxy.invoke('onKeyEvent', key, 1);
    }

    onMouseMove(x, y) {
        protoProxy.invoke('onMouseMove', x, y);
    }

    onMouseScroll(delta, axis) {
        protoProxy.invoke('onMouseScroll', delta, axis);
    }

    /* Mouse button
      Left 0,
      Middle 1,
      Right 2
     */
    onMouseDown(button) {
        protoProxy.invoke('onMouseClick', button, 0);
    }

    onMouseUp(button) {
        protoProxy.invoke('onMouseClick', button, 1);
    }

    onMouseClick(button) {
        protoProxy.invoke('onMouseClick', button, 2);
    }
}

const self = new RCImpl();
export default self;
